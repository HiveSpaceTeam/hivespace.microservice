// <auto-generated />
using System;
using HiveSpace.CatalogService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HiveSpace.CatalogService.Infrastructure.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.AttributeAggregate.AttributeDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Attributes", (string)null);
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.AttributeAggregate.AttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AttributeDefinitionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributeDefinitionId");

                    b.ToTable("AttributeValues", (string)null);
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.CategoryAggregate.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.ProductAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributes", (string)null);
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.ProductVariant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariants", (string)null);
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.Sku", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SkuNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Skus", (string)null);
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.AttributeAggregate.AttributeDefinition", b =>
                {
                    b.OwnsOne("HiveSpace.CatalogService.Domain.Aggregates.AttributeAggregate.AttributeType", "Type", b1 =>
                        {
                            b1.Property<Guid>("AttributeDefinitionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("InputType")
                                .HasColumnType("int");

                            b1.Property<bool>("IsMandatory")
                                .HasColumnType("bit");

                            b1.Property<int>("MaxValueCount")
                                .HasColumnType("int");

                            b1.Property<int>("ValueType")
                                .HasColumnType("int");

                            b1.HasKey("AttributeDefinitionId");

                            b1.ToTable("Attributes");

                            b1.WithOwner()
                                .HasForeignKey("AttributeDefinitionId");
                        });

                    b.Navigation("Type")
                        .IsRequired();
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.AttributeAggregate.AttributeValue", b =>
                {
                    b.HasOne("HiveSpace.CatalogService.Domain.Aggregates.AttributeAggregate.AttributeDefinition", null)
                        .WithMany("Values")
                        .HasForeignKey("AttributeDefinitionId");
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.Product", b =>
                {
                    b.OwnsMany("HiveSpace.CatalogService.Domain.AggergateModels.ProductAggregate.ProductImage", "Images", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("FileId")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId", "Id");

                            b1.ToTable("ProductImages", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsMany("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.ProductCategory", "Categories", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("CategoryId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ProductId", "Id");

                            b1.ToTable("ProductCategories", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Categories");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.ProductAttribute", b =>
                {
                    b.HasOne("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.Product", null)
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.ProductVariant", b =>
                {
                    b.HasOne("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.Product", null)
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.ProductVariantOption", "Options", b1 =>
                        {
                            b1.Property<Guid>("ProductVariantId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("OptionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("VariantId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ProductVariantId", "Id");

                            b1.ToTable("ProductVariantOptions", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ProductVariantId");
                        });

                    b.Navigation("Options");
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.Sku", b =>
                {
                    b.HasOne("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.Product", null)
                        .WithMany("Skus")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.SkuImage", "Images", b1 =>
                        {
                            b1.Property<Guid>("SkuId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("FileId")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SkuId", "Id");

                            b1.ToTable("SkuImages", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("SkuId");
                        });

                    b.OwnsMany("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.SkuVariant", "SkuVariants", b1 =>
                        {
                            b1.Property<Guid>("SkuId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("OptionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("VariantId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("SkuId", "Id");

                            b1.ToTable("SkuVariants", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("SkuId");
                        });

                    b.OwnsOne("HiveSpace.CatalogService.Domain.Common.Money", "Price", b1 =>
                        {
                            b1.Property<Guid>("SkuId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Amount")
                                .HasColumnType("float");

                            b1.Property<int>("Currency")
                                .HasColumnType("int");

                            b1.HasKey("SkuId");

                            b1.ToTable("Skus");

                            b1.WithOwner()
                                .HasForeignKey("SkuId");
                        });

                    b.Navigation("Images");

                    b.Navigation("Price")
                        .IsRequired();

                    b.Navigation("SkuVariants");
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.AttributeAggregate.AttributeDefinition", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("HiveSpace.CatalogService.Domain.Aggregates.ProductAggregate.Product", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Skus");

                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
