@page
@model HiveSpace.UserService.Api.Pages.Account.Login.Index
@section Styles {
    <link rel="stylesheet" href="~/css/login.css" />
    <link rel="stylesheet" href="~/css/auth-layout.css" />
}
@section Scripts {
}

@* Start Auth Container *@
@await Html.PartialAsync("_AuthContainer")
<div class="login-header">
    <h1 class="login-title">Sign In</h1>
    <p class="login-subtitle">Enter your email and password to sign in!</p>
</div>
<partial name="_ValidationSummary" />

@if (Model.View.EnableLocalLogin)
{
    <div>
        @* Social Login Component *@
        @{
            ViewData["Providers"] = Model.View.VisibleExternalProviders;
            ViewData["ReturnUrl"] = Model.Input?.ReturnUrl;
        }
        <partial name="_SocialLogin" />

        <form method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Input.ReturnUrl" />

            <partial name="_ApiErrors" />

            @* Email Input Component *@
            @{
                ViewData["PropertyName"] = "Input.Email";
                ViewData["Value"] = Model.Input?.Email;
                ViewData["Label"] = "Email";
                ViewData["Type"] = "email";
                ViewData["Placeholder"] = "Enter your email";
                ViewData["AutoComplete"] = "username";
                ViewData["AutoFocus"] = true;
                ViewData["Required"] = true;
                ViewData["ValidationRules"] = System.Text.Json.JsonSerializer.Serialize(new { required = true, email = true });
                ViewData["ErrorMessages"] = System.Text.Json.JsonSerializer.Serialize(new
                {
                    required = "Email is required",
                    email = "Please enter a valid email address"
                });
            }
            <partial name="_FormInput" />

            @* Password Input Component *@
            @{
                ViewData["PropertyName"] = "Input.Password";
                ViewData["Value"] = Model.Input?.Password;
                ViewData["Label"] = "Password";
                ViewData["Placeholder"] = "Enter your password";
                ViewData["AutoComplete"] = "current-password";
                ViewData["Required"] = true;
                ViewData["ValidationRules"] = System.Text.Json.JsonSerializer.Serialize(new { required = true });
                ViewData["ErrorMessages"] = System.Text.Json.JsonSerializer.Serialize(new
                {
                    required = "Password is required"
                });
            }
            <partial name="_PasswordInput" />

            <div class="flex items-center justify-between mb-3">
                @if (Model.View.AllowRememberLogin)
                {
                    @* Remember Me Checkbox Component *@
                    ViewData["PropertyName"] = "Input.RememberLogin";
                    ViewData["Value"] = Model.Input?.RememberLogin;
                    ViewData["Label"] = "Keep me logged in";
                    <partial name="_Checkbox" />
                }
                <a href="/Account/ForgotPassword" class="forget-password">Forgot password?</a>
            </div>

            @* Submit Button Component *@
            @{
                ViewData["AspFor"] = Model.Input?.Button;
                ViewData["Value"] = "login";
                ViewData["Text"] = "Sign In";
            }
            <partial name="_SubmitButton" />
        </form>

        @if (!Model.View.IsAdminPortalClient)
        {
            <div class="signup-text">
                Don't have an account? <a href="/Account/Register@(Request.QueryString)" class="signup-link">Sign Up</a>
            </div>
        }
    </div>
}
@* End Auth Container *@
@await Html.PartialAsync("_AuthContainerEnd")

@if (!Model.View.EnableLocalLogin && !Model.View.VisibleExternalProviders.Any())
{
    <div class="alert alert-warning">
        <strong>Invalid login request</strong>
        There are no login schemes configured for this request.
    </div>
}